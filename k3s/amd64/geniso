#!/usr/bin/env bash

message() {
  echo -e "\n######################################################################"
  echo "# $1"
  echo "######################################################################"
}

need() {
  which "$1" &>/dev/null || die "Binary '$1' is missing but required."
}

usage() {
  cat << EOF
usage: geniso COMMAND [NODE]

Commands:
    generate    Generate an ISO by providing a node
    list        List available nodes to be built

Examples:
    geniso GENERATE node-1
    geniso list
EOF
}

list() {
  echo -e "The following node files are detected:\n"
  ls -1 nodes | grep -v network-config
}

generate() {
  NODE="$1"
  if [ -f "nodes/$NODE" ]
  then
    echo "Node $NODE found."
  else
    echo "Node not found, available nodes below."
    list
    exit 1
  fi

  export REPO_ROOT=$(git rev-parse --show-toplevel)
  . "$REPO_ROOT"/.env

  message "Creating k3s-seed ISO for $NODE."
  echo "Touching meta-data file."
  touch meta-data
  echo "Populating variables to temporary user-data file."
  envsubst < "nodes/${NODE}" > "user-data"
  echo "Running cloud-localds for your node."
  if [ -f "nodes/$NODE.network-config" ]; then
    envsubst < "nodes/${NODE}.network-config" > "network-config" 
    cloud-localds k3s-seed-$NODE.iso --network-config=network-config user-data meta-data
  else 
    cloud-localds k3s-seed-$NODE.iso user-data meta-data
  fi
  rm user-data
  rm meta-data
  rm network-config
  echo "Copying seed ISO to Proxmox"
  scp k3s-seed-$NODE.iso root@${PROXMOX_SERVER}:/var/lib/vz/template/iso/
}

case "$1" in
generate)
  need "scp"
  need "envsubst"
  need "cloud-localds"
  generate $2
  ;;
list)
  list
  ;;
*)
  usage
  ;;
esac
